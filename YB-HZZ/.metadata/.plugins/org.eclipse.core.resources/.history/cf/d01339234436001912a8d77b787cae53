var formUtil = {
		 //错误提示
	    errorTip: function (str) {
	        layer.alert(str, {
	            icon: 5,
	            title: "提示"
	        });
	        return;
	    },
	    //成功提示
	    successTip: function (str) {
	        layer.alert(str, {
	            icon: 6,
	            title: "提示"
	        });
	        return;
	    },
	    //选择行政区 乡镇
	    townFormat: function(info) {
	        var $town = $('#citys select[name="town"]');
	        $town.hide().empty();
	        if (info['code'] % 1e4 && info['code'] < 7e5) {	//是否为“区”且不是港澳台地区
	            $.ajax({
	                url: 'common/util/data_location/town/' + info['code'] + '.json',
	                dataType: 'json',
	                success: function (town) {
	                    $town.show();
	                    for (i in town) {
	                        $town.append('<option value="' + i + '">' + town[i] + '</option>');
	                    }
	                }
	            });
	        }
	    },
		//表单模态框   0删除 1新增 2编辑 3详情
	    showBtn:function(type,objName){
	    	$("#form_" + objName.id)[0].reset();
	    	$(".error").html('');
	    	$('#form_' + objName.id).find('input').removeClass('input-validation-error');
	    	$("#form_" + objName.id).find('input,textarea,select').removeAttr('disabled');
	    	if(type == 1){
	    		$(".modal .btn-primary.update").hide();
	    		$(".modal .btn-primary.add").show();
	    		$("#title_type").text('新增');
	    	}else if(type == 2){
	    		$(".modal .btn-primary.add").hide();
	        	$(".modal .btn-primary.update").show();
	        	formUtil.fillData('form_' + objName.id,objName.clickRow);
	        	$("#title_type").text('编辑');
	    	}else if(type == 3){
	    		$(".modal .btn-primary.update").hide();
	    		$(".modal .btn-primary.add").hide();
	    		$("#title_type").text('详情');
	    		formUtil.fillData('form_' + objName.id,objName.clickRow);
	    		 $("#form_" + objName.id).find('input,textarea,select').attr('disabled',true);
	    	}
	    	 $("#modal_" + objName.id).modal('show');
	    },
	    
	    // 填充数据  id:表单id  data:填充数据
	    fillData:function(id,data){
	    	 $('#' + id).populateForm(data);
	    },
	    
	    //删除数据  删除编码
	    deleteData:function(url,tableId){
	        var result=commonUtils.post(url,null,false);
	        if(result.flag){
	        	$("#" + tableId).bootstrapTable('refresh');
	        	formUtil.successTip("删除成功!");
	        }else{
	        	formUtil.errorTip("删除失败!");
	        }
	    },
	    
	    //提交表单
	    submitFormData:function(objName,url){
	    	alert("bbb");
	    	var valid = $("#form_" + objName.id).valid();
	    	console.log(valid);
        	if(valid){
        		$("#form_" + objName.id).find('input,textarea,select').removeAttr('disabled');
        		var formData = $('#form_' + objName.id).serializeArray();
        		console.log(formData);
        		var resultData = commonUtils.post(url,formData,false);
    	        if(resultData.flag){
    	       	 	$("#table_" + objName.id).bootstrapTable('refresh');
    	            $("#modal_" + objName.id).modal("hide");
    	            formUtil.successTip("保存成功!");
    	        }else{
    	        	formUtil.errorTip("保存失败!");
    	        }
        	}
	   },
}
$.fn.populateForm = function (data) {
    return this.each(function () {
        var formElem, name;
        if (data == null) {
            this.reset();
            return;
        }
        for (var i = 0; i < this.length; i++) {
            formElem = this.elements[i];
            //checkbox的name可能是name[]数组形式
            name = (formElem.type == "checkbox") ? formElem.name.replace(/(.+)\[\]$/, "$1") : formElem.name;
            if (data[name] == undefined) continue;
            switch (formElem.type) {
                case "checkbox":
                    if (data[name] == "") {
                        formElem.checked = false;
                    } else {
                        //数组查找元素
                        if (data[name].indexOf(formElem.value) > -1) {
                            formElem.checked = true;
                        } else {
                            formElem.checked = false;
                        }
                    }
                    break;
                case "radio":
                    if (data[name] == "") {
                        formElem.checked = false;
                    } else if (formElem.value == data[name]) {
                        formElem.checked = true;
                    }
                    break;
                case "button":
                    break;
                default:
                    formElem.value = data[name];
            }
        }
    });
};