//id div 的id，isMultiple 是否多选，chkboxType 多选框类型{"Y": "ps", "N": "s"} 
function initSelectTree(id, isMultiple, chkboxType,data,type) {
	var html="";
    var setting = {
        view: {
            dblClickExpand: false,
            showLine: false
        },
        data: {
            simpleData: {
                enable: true,
                idKey:"id",//设置之后id为在简单数据模式中的父子节点关联的桥梁
                pidKey:"pId",//设置之后pid为在简单数据模式中的父子节点关联的桥梁和id互相对应
                rootId:"-1"//pid为null的表示根节点
            }
        },
        check: {
            enable: false,
            chkboxType: {"Y": "ps", "N": "s"}
        },
        callback: {
            onClick: onClick,
            onCheck: onCheck
        }

    };
    if (isMultiple) {
        setting.check.enable = isMultiple;
    }
    if (chkboxType !== undefined && chkboxType != null) {
        setting.check.chkboxType = chkboxType;
    }
    var style="";
    if(type!=1){
    	style="none";
    }
     html='<div class="tree-content scrollbar" style="display:'+style+';">' +
    '<input hidden id="' + id + 'Hide" ' +
    'name="' + $(".select-tree").attr("id") + '">' +
    '<ul id="' + id + 'Tree" class="ztree scrollbar" style="margin-top:0;"></ul>' +
    '</div>';
   if(type!=1){
    	    $(".layui-layer-content #" + id).parent().append(html);
    	    $(".layui-layer-content #" + id).bind("click", function () {
    	        if ($(this).parent().find(".tree-content").css("display") !== "none") {
    	            hideMenu()
    	        } else {
    	            $(this).addClass("layui-form-selected");
    	            var Offset = $(this).offset();
    	            var width = $(this).width() - 2;
    	            $(this).parent().find(".tree-content").css({
    	                left: Offset.left + "px",
    	                top: Offset.top + $(this).height() + "px"
    	            }).slideDown("fast");
    	            $(this).parent().find(".tree-content").css({
    	                width: width
    	            });
    	            $("body").bind("mousedown", onBodyDown);
    	        }
    	    });
    }else{
    	 $(".layui-layer-content #" + id).append(html);
    }
   
    $.fn.zTree.init($("#" + id + "Tree"), setting,data);
}

function beforeClick(treeId, treeNode) {
    var check = (treeNode && !treeNode.isParent);
    if (!check) alert("只能选择城市...");
    return check;
}

function onClick(event, treeId, treeNode) {
    var zTree = $.fn.zTree.getZTreeObj(treeId);
    if (zTree.setting.check.enable == true) {
        zTree.checkNode(treeNode, !treeNode.checked, false)
        assignment(treeId, zTree.getCheckedNodes());
    } else {
        assignment(treeId, zTree.getSelectedNodes());
        hideMenu();
    }
}

function onCheck(event, treeId, treeNode) {
    var zTree = $.fn.zTree.getZTreeObj(treeId);
    assignment(treeId, zTree.getCheckedNodes());
}

function hideMenu() {
    $(".select-tree").removeClass("layui-form-selected");
    $(".tree-content").fadeOut("fast");
    $("body").unbind("mousedown", onBodyDown);
}

function assignment(treeId, nodes) {
    var names = "";
    var ids = "";
    for (var i = 0, l = nodes.length; i < l; i++) {
        names += nodes[i].name + ",";
        ids += nodes[i].id + ",";
    }
    if (names.length > 0) {
        names = names.substring(0, names.length - 1);
        ids = ids.substring(0, ids.length - 1);
    }
    treeId = treeId.substring(0, treeId.length - 4);
    $(".layui-layer-content #" + treeId + "Show").attr('value',names);
    $(".layui-layer-content #" + treeId + "Show").attr("title", names);
    $(".layui-layer-content #" + treeId + "Hide").attr("value", ids);
}
function  selectNode(data,treeId,id){
	 var treeObj = $.fn.zTree.getZTreeObj(treeId);//ztree树的ID
	  var nodes = treeObj.transformToArray(treeObj.getNodes());//将 zTree 使用的标准 JSON 嵌套格式的数据转换为简单 Array 格式
	  console.log(nodes);
	  for (var i=0, l=nodes.length; i < l; i++) {
		  for(var j=0;j<data.length;j++){
			     if(nodes[i].id==data[j]){
			    	  treeObj.checkNode(nodes[i], true, false);
			     }
			}
	  }
	 
    assignment(treeId, treeObj.getCheckedNodes());
}
function onBodyDown(event) {
    if ($(event.target).parents(".tree-content").html() == null) {
        hideMenu();
    }
}
function checkAllNodes(treeId,checkAllNodes){
	var zTree = $.fn.zTree.getZTreeObj(treeId);
	if (checkAllNodes) {
        zTree.checkAllNodes(true);
    }else{
        zTree.checkAllNodes(false);
    }
}
function  openFoldTree(treeId,flag){
	var zTree = $.fn.zTree.getZTreeObj(treeId);
	if(flag){
		zTree.expandAll(true);	
	}else{
		zTree.expandAll(false);	
	}
}

function findsearchTree(key,treeId){
	var ztree = $.fn.zTree.getZTreeObj(treeId);
	var hidenode = ztree.transformToArray(ztree.getNodes());//将 zTree 使用的标准 JSON 嵌套格式的数据转换为简单 Array 格式
    ztree.hideNodes(hidenode);//隐藏所有节点
    nodeList = ztree.getNodesByParamFuzzy("name", key, null);//模糊查询
    if (nodeList && nodeList.length > 0) {
        for ( var i = 0; i < nodeList.length; i++) {
            nodeList[i].highlight = true;//设置高亮
            findParent(ztree, nodeList[i]);
            ztree.updateNode(nodeList[i]);
            ztree.expandNode(nodeList[i], true, true, false);//展开节点
        }
    }
}
//找到其父亲节点
function findParent(ztree, node) {
    ztree.expandNode(node, true, false, true);//展开节点
    ztree.showNode(node);//显示该节点
    var pNode = node.getParentNode();
    if (pNode != null) {
        findParent(ztree, pNode);
    }
}