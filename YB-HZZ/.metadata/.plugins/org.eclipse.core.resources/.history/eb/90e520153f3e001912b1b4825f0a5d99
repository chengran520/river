package com.gxhy.base.system.controller;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import lombok.extern.slf4j.Slf4j;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.alibaba.fastjson.JSONObject;
import com.github.pagehelper.Page;
import com.gxhy.base.controller.BaseController;
import com.gxhy.base.imp.ImportExeclUtil;
import com.gxhy.base.model.RequestModel;
import com.gxhy.base.model.ResponseModel;
import com.gxhy.base.model.UserModel;
import com.gxhy.base.system.mapper.RoleMapper;
import com.gxhy.base.system.mapper.SysUserMapper;
import com.gxhy.base.system.model.RoleModel;
import com.gxhy.base.system.service.RoleService;
import com.gxhy.base.system.service.SysUserService;
import com.gxhy.utils.PageUtil;
import com.gxhy.utils.QueryUtil;

@Slf4j
@RestController
@RequestMapping("/system/role")
@SuppressWarnings("unused")
public class RoleController extends BaseController{
	
    private static final Logger logger = LoggerFactory.getLogger(RoleController.class);
	
	@Autowired
	private RoleService roleService;
	
	/***
	 * 获取所有的角色信息
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/getAllRole",method = RequestMethod.GET)
	public Object  getAllUser(HttpServletRequest request,QueryUtil model){
		JSONObject  map=getQueryMap(request,model);
		Page<RoleModel> page = roleService.getListRoles(map);
		return PageUtil.success(page);
	}
	
	/***
     * 导入角色信息
     * @param file
     * @param request
     * @param response
     * @return
     */
	@RequestMapping(value = "/importRoleFile",method = RequestMethod.POST)
    public Object importRoleFile(HttpServletRequest request) {
		//导入操作
		String name = "";
		MultipartFile file=null;
		MultipartHttpServletRequest multiRequest=(MultipartHttpServletRequest)request;
        Iterator iter=multiRequest.getFileNames(); 
        while(iter.hasNext()){
            file = multiRequest.getFile(iter.next().toString());
            name = file.getOriginalFilename();
         }
		int i=roleService.importFileRole(file,null);
	    return ResponseModel.Success(i);   
	}
	
	/***
	 * 新增角色信息
     * @param request
     * @return
     */
	@RequestMapping(value = "/addRole",method = RequestMethod.POST)
    public Object addRole(RoleModel model) {
		//导入操作
		int i=roleService.importFileRole(null,model);
	    return ResponseModel.Success(i);   
	}
	
	/***
     * 获取所有的用户信息
     * @param file
     * @param request
     * @param response
     * @return
     */
	@RequestMapping(value = "/deleteRole",method = RequestMethod.POST)
	public Object  deleteRole(HttpServletRequest request,QueryUtil model){
		int i=roleService.deleteRole(model);
		return ResponseModel.Success(i);   
	}
	/**
	 * 获取所有的角色和用户已有的角色信息
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/getAllRoles",method = RequestMethod.GET)
	private Object getAllRoles(QueryUtil model) {
		JSONObject map = new JSONObject();
		Map<String, Object> maps=roleService.getAllRoles(map,model);
		return ResponseModel.Success(maps);    
	}
	
	/**
	 * 保存角色权限信息
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/saveRolePers",method = RequestMethod.POST)
	private Object saveRolePers(QueryUtil model) {
        int i=roleService.saveRolePers(model);
        return ResponseModel.Success(i);  
	}	
	/**
	 * 保存用户和角色关系
	 * @param request
	 * @param model
	 * @return
	 */
	
	@RequestMapping(value = "/saveUserRoles",method = RequestMethod.POST)
	private Object saveUserRoles(@RequestBody QueryUtil model) {
		int i=roleService.saveUserRoles(model);
		return ResponseModel.Success(i);    
	}		
	/**
	 * 请求公用方法
	 * @param request
	 * @param model
	 * @return
	 */
	private JSONObject getQueryMap(HttpServletRequest request, QueryUtil model) {
		JSONObject map = new JSONObject();
		try {
			map = InitParams(model);
			RequestInitRanges(map,true,QueryUtil.class);
			map.put("keyWord", model.getKeyWord());
		}catch (Exception e) {
			e.printStackTrace();
		}
		return map;
	}
	
	
	
	
}
